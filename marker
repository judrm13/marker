#! /usr/bin/env python3

import argparse
import os

# Subcommand imports
import upload_marks
import upload_reports
import download
import set_status
import prepare
import run


# Create the top-level parser
top_parser = argparse.ArgumentParser()
subparsers = top_parser.add_subparsers(help='sub-command help')

# -----------------------------------------------------------------------------
#                                download
# -----------------------------------------------------------------------------

# create the parser for the "a" command
parser_dl = subparsers.add_parser('download', help='download help')
parser_dl.add_argument("config", help="Path to the marker conig file")
parser_dl.add_argument("assgn_dir", nargs='?', default=os.getcwd(), 
                    help="Location to create directories (Default: current)")
parser_dl.set_defaults(func=download.main)

# -----------------------------------------------------------------------------
#                                prepare
# -----------------------------------------------------------------------------

parser_prep = subparsers.add_parser('prepare', help='prepare help')
parser_prep.add_argument("config", help="Location of configuration file")
parser_prep.add_argument(dest="assgn_dir", nargs='?', default=os.getcwd(), 
                    help="Location of marking directory (Default: current)")
parser_prep.add_argument("--src", "-s", dest="src_dir", default=None,
                    help="Source directory (Default: config. directory)")
parser_prep.set_defaults(func=prepare.main)

# -----------------------------------------------------------------------------
#                                  run
# -----------------------------------------------------------------------------

parser_run = subparsers.add_parser('run', help='run help')
parser_run.add_argument("assgn_dir", nargs='?', default=os.getcwd(), 
                        help="Marking directory (Default: current)")
parser_run.add_argument("--recompile", "-r", action='store_true', 
                        help="Force recompile submissions")
parser_run.add_argument("--all", "-a", action='store_true', default=False,
                        help="Force re-mark all submissions")
parser_run.add_argument("--config", default=None, help="Location of "
                        "configuration file, if not config.yml in assgn_dir")
parser_run.set_defaults(func=run.main)

# -----------------------------------------------------------------------------
#                              upload-marks
# -----------------------------------------------------------------------------

parser_upm = subparsers.add_parser('upload-marks', help='upload-marks help')
parser_upm.add_argument("assgn_dir", nargs='?', default=os.getcwd(), 
                        help="Location of assignment dir (Default: current)")
parser_upm.add_argument("--config", default=None, help="Location of "
                        "configuration file, if not config.yml in assgn_dir")
parser_upm.set_defaults(func=upload_marks.main)

# -----------------------------------------------------------------------------
#                              upload-reports
# -----------------------------------------------------------------------------

parser_upr = subparsers.add_parser('upload-reports', help='upload-reports help')
parser_upr.add_argument("assgn_dir", nargs='?', default=os.getcwd(), 
                        help="Location of assignment dir (Default: current)")
parser_upr.add_argument("--config", default=None, help="Location of "
                        "configuration file, if not config.yml in assgn_dir")
parser_upr.set_defaults(func=upload_reports.main)


# -----------------------------------------------------------------------------
#                              set-status
# -----------------------------------------------------------------------------

parser_sst = subparsers.add_parser('set-status', help='set-status help')
parser_sst.add_argument("status", choices=['complete', 'incomplete'], 
                        help="Status to set")
parser_sst.add_argument("assgn_dir", nargs='?', default=os.getcwd(), 
                        help="Location of assignment dir (Default: current)")
parser_sst.add_argument("--config", default=None, help="Location of "
                        "configuration file, if not config.yml in assgn_dir")
parser_sst.set_defaults(func=set_status.main)

# -----------------------------------------------------------------------------

args = top_parser.parse_args()
if not hasattr(args, 'func'):
    top_parser.parse_args(['-h'])
args.func(args)
